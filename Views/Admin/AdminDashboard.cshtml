@using MarkRestaurant.Data;
@using MarkRestaurant.Data.Repositories;
@using Newtonsoft;
@inject IDashboardRepository dashboardRepository

@{
    ViewData["Title"] = "Dashboard";

    var allUsersCount = dashboardRepository.GetAllUsersCountAsync().Result;
    var allCompletedOrdersCount = dashboardRepository.GetAllCompletedOrdersCountAsync().Result;
    var activeOrdersCount = dashboardRepository.GetActiveOrdersCountAsync().Result;
    var todayCompletedOrdersCount = dashboardRepository.GetTodayCompletedOrdersCountAsync().Result;
    var totalRevenue = dashboardRepository.GetTotalRevenueAsync().Result;
    var topUsers = dashboardRepository.GetTopUsersAsync().Result;
    var dailySalesData = dashboardRepository.GetWeeklySalesAsync().Result;
    var dailyUserRegistrations = dashboardRepository.GetWeeklyUserRegistrationsAsync().Result;
}

<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <link href="~/css/admin/admin-dashboard.css" rel="stylesheet" asp-append-version="true"/>
        <link href="~/css/admin/admin-main.css" rel="stylesheet" asp-append-version="true"/>
        <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet" />
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
        <title>Dashboard</title>
    </head>
    <body>
        <partial name="~/Views/Shared/Navbars/_AdminNavbar.cshtml"/>

        <div class="dashboard-container">
            <h1 class="dashboard-title">Dashboard</h1>
            <div class="dashboard-cards">
                <div class="card">
                    <div class="card-content">
                        <h3>All Users</h3>
                        <hr style="color: wheat"/>
                        <p>@allUsersCount</p>
                    </div>
                </div>
                <form asp-controller="Admin" asp-action="AdminCompletedOrders" method="post" class="card">
                    <button type="submit" class="card-content">
                        <div>
                            <h3>All Completed Orders</h3>
                            <hr style="color: wheat" />
                            <p style="color: wheat">@allCompletedOrdersCount</p>
                        </div>
                    </button>
                </form>
                <div class="card">
                    <div class="card-content">
                        <h3>Revenue</h3>
                        <hr style="color: wheat"/>
                        <p style="color: wheat">₼ @totalRevenue</p>
                    </div>
                </div>
                <form asp-controller="Admin" asp-action="AdminTodayCompletedOrders" method="post" class="card">
                    <button type="submit" class="card-content">
                        <div>
                            <h3>Today Completed Orders</h3>
                            <hr style="color: wheat" />
                            <p style="color: wheat">@todayCompletedOrdersCount</p>
                        </div>
                    </button>
                </form>
                <div class="card">
                    <div class="card-content">
                        <h3>Top 3 Users</h3>
                        <hr style="color: wheat"/>
                        <ul>
                            @foreach (var user in topUsers)
                            {
                                <li style="color: white">@user.Name @user.Surname</li>
                            }
                        </ul>
                    </div>
                </div>
                <form asp-controller="Admin" asp-action="AdminActiveOrders" method="post" class="card">
                    <button type="submit" class="card-content">
                        <div>
                            <h3>Active Orders</h3>
                            <hr style="color: wheat" />
                            <p style="color: wheat">@activeOrdersCount</p>
                        </div>
                    </button>
                </form>
            </div>

            <div class="charts-container">
                <div class="chart-container">
                    <h2>Daily Sales</h2>
                    <canvas id="salesChart"></canvas>
                </div>
                <div class="chart-container">
                    <h2>Daily Registrations</h2>
                    <canvas id="registrationsChart"></canvas>
                </div>
            </div>
            <p class="while">While there is little data, the graphs are not drawn.</p>
        </div>

        <script>
            const salesData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(dailySalesData));
            const registrationsData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(dailyUserRegistrations));

            const salesCtx = document.getElementById('salesChart').getContext('2d');
            const salesChart = new Chart(salesCtx, {
                type: 'bar',
                data: {
                    labels: salesData.map(data => data.Day),
                    datasets: [{
                        label: 'Total Sales',
                        data: salesData.map(data => data.TotalSales),
                        backgroundColor: 'rgba(75, 192, 192, 0.2)',
                        borderColor: 'rgba(75, 192, 192, 1)',
                        borderWidth: 1
                    }]
                },
                responsive: true,
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });

            const registrationsCtx = document.getElementById('registrationsChart').getContext('2d');
            const registrationsChart = new Chart(registrationsCtx, {
                type: 'line',
                data: {
                    labels: registrationsData.map(data => data.Day),
                    datasets: [{
                        label: 'User Registrations',
                        data: registrationsData.map(data => data.RegistrationCount),
                        fill: false,
                        borderColor: 'rgba(255, 99, 132, 1)',
                        tension: 0.1
                    }]
                },
                options: {
                    responsive: true,
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        </script>
    </body>
</html>
